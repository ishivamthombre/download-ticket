{
  "workflow":{
    "id":"Ticket_download",
    "name":"",
    "description":"",
    "mode":"ie",
    "latestNodeId":6,
    "intent":"txn-productapply",
    "entities":[
      "banking.adjectival-phrases",
      "sys.amount",
      "sys.amount-range",
      "banking.bank-name",
      "banking.biller-category",
      "banking.biller-name",
      "banking.billGroup-id",
      "banking.cheque-noOfLeafs",
      "sys.city",
      "sys.country",
      "sys.currency-code",
      "banking.customer-id",
      "sys.date",
      "sys.date-range",
      "banking.deal-number",
      "sys.distance-measurement",
      "sys.email",
      "banking.employment-type",
      "banking.expenseType",
      "sys.file-format",
      "sys.frequency",
      "sys.gender",
      "sys.holiday-list",
      "banking.interest-rate",
      "sys.itemNumber",
      "sys.locality",
      "sys.location",
      "sys.nick-name",
      "sys.number",
      "banking.otp",
      "banking.payee-category",
      "banking.payee-name",
      "sys.person-name",
      "sys.person-phone-number",
      "sys.person-relationship",
      "sys.person-salutation",
      "banking.pin",
      "insurance.policy-number",
      "sys.postal-code",
      "banking.product-account-number",
      "banking.product-account-type",
      "banking.product-card-number",
      "banking.product-card-transaction-isBilledTxn",
      "banking.product-card-type",
      "banking.product-cheque-number",
      "banking.product-list",
      "banking.product-loan-number",
      "banking.product-loan-type",
      "banking.product-name",
      "banking.product-statementMonth",
      "banking.product-type",
      "banking.property-id",
      "banking.purpose",
      "sys.quantity",
      "banking.reference-number",
      "banking.reward-points",
      "sys.confirmation",
      "sys.tenure",
      "sys.time",
      "banking.transaction-count",
      "banking.transaction-description",
      "banking.transaction-merchant",
      "banking.transaction-spendCategory",
      "banking.transaction-type",
      "banking.unit-type",
      "sys.user-details-type",
      "banking.user-id"
    ],
    "routes":[
      "direct:live.chat.invoke.start.chat.api",
      "direct:live.chat.invoke.sendmessage.chat.api",
      "direct:live.chat.invoke.polling.chat.api",
      "direct:live.chat.invoke.close.chat.api",
      "direct:live.chat.invoke.webhook.transform.request.chat.api",
      "direct:manual.chat.invoke.close.chat.api",
      "direct:morfeus.login",
      "direct:manual.chat.invoke.session.expiry",
      "direct:retail.spend.query",
      "direct:retail.banking.login",
      "direct:retail.banking.balance.inquiry",
      "direct:retail.banking.account.inquiry",
      "direct:retail.banking.portfolio",
      "direct:retail.banking.transaction.inquiry.in.memory",
      "direct:retail.spend.query",
      "direct:retail.banking.transaction.transfer",
      "direct:retail.banking.transaction.transfer",
      "direct:retail.banking.transaction.transfer.billpayment",
      "direct:retail.banking.post.login",
      "direct:retail.banking.forgot.voice.pin.main",
      "direct:retail.banking.unhandled.intent",
      "direct:rb.balance.inquiry.alexa",
      "direct:rb.account.inquiry.alexa",
      "direct:retail.banking.transaction.transfer.alexa"
    ],
    "templates":[
      "120111023335344",
      "120111023373838",
      "120111023522275",
      "12011110036457",
      "12108133545313",
      "AlsoAskFaqTemplate",
      "buttonTemplate",
      "carouselTemplate",
      "FAQ_WEB_SEARCH_TEMPLATE",
      "imageTemplate",
      "listTemplate",
      "ONTOLOGY_SUGGESTION_TEMPLATE",
      "quickReplyTextTemplate",
      "ServiceRequestConfirmation",
      "Ticket_download_confirm",
      "videoTemplate",
      "Welcome"
    ],
    "state":"",
    "start_node":"",
    "flow":{
      "nodes":[
        {
          "nodeId":"start",
          "definition":{
            "id":"start",
            "name":"Start",
            "description":"Beginning of workflow",
            "status":"",
            "jumpNodes":true,
            "entities":[

            ],
            "onMissingEntities":{

            },
            "customerPreferences":[

            ],
            "startNode":true,
            "stopNode":false,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntityOrder":[

            ],
            "enableJumpNode":true
          },
          "onValidate":{
            "type":"validation",
            "expression":"",
            "onCompletion":{
              "response":[

              ]
            },
            "validation":[

            ]
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[
              {
                "toNode":"Step-6",
                "goto":"node"
              }
            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":"Step-1"
              }
            },
            "type":"connection"
          }
        },
        {
          "nodeId":"sys.cancellation",
          "definition":{
            "id":"sys.cancellation",
            "name":"sys.cancellation",
            "description":"Cancel or exit from current flow",
            "status":"",
            "jumpNodes":false,
            "entities":[
              "sys.cancellation"
            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"message",
                "message":"The request has been cancelled, how else can I help you?"
              }
            ],
            "startNode":false,
            "stopNode":true,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{

            },
            "trinityEntitiesOrder":[
              "sys.cancellation",
              "banking.adjectival-phrases",
              "sys.amount",
              "sys.amount-range",
              "banking.bank-name",
              "banking.biller-category",
              "banking.biller-name",
              "banking.billGroup-id",
              "banking.cheque-noOfLeafs",
              "sys.city",
              "sys.country",
              "sys.currency-code",
              "banking.customer-id",
              "sys.date",
              "sys.date-range",
              "banking.deal-number",
              "sys.distance-measurement",
              "sys.email",
              "banking.employment-type",
              "banking.expenseType",
              "sys.file-format",
              "sys.frequency",
              "sys.gender",
              "sys.holiday-list",
              "banking.interest-rate",
              "sys.itemNumber",
              "sys.locality",
              "sys.location",
              "sys.nick-name",
              "sys.number",
              "banking.otp",
              "banking.payee-category",
              "banking.payee-name",
              "sys.person-name",
              "sys.person-phone-number",
              "sys.person-relationship",
              "sys.person-salutation",
              "banking.pin",
              "insurance.policy-number",
              "sys.postal-code",
              "banking.product-account-number",
              "banking.product-account-type",
              "banking.product-card-number",
              "banking.product-card-transaction-isBilledTxn",
              "banking.product-card-type",
              "banking.product-cheque-number",
              "banking.product-list",
              "banking.product-loan-number",
              "banking.product-loan-type",
              "banking.product-name",
              "banking.product-statementMonth",
              "banking.product-type",
              "banking.property-id",
              "banking.purpose",
              "sys.quantity",
              "banking.reference-number",
              "banking.reward-points",
              "sys.tenure",
              "sys.time",
              "banking.transaction-count",
              "banking.transaction-description",
              "banking.transaction-merchant",
              "banking.transaction-spendCategory",
              "banking.transaction-type",
              "banking.unit-type",
              "sys.user-details-type",
              "banking.user-id"
            ]
          },
          "onValidate":{
            "expression":""
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":""
              }
            },
            "type":"connection"
          }
        },
        {
          "nodeId":"Step-5",
          "definition":{
            "id":"Step-5",
            "name":"Status",
            "description":"Show download status",
            "status":"nonactive",
            "jumpNodes":false,
            "entities":[

            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"webhook",
                "webHook":{
                  "webhookUrl":"https://8e1f-52-221-78-236.ngrok.io/sampleWebhookApp/download/status",
                  "webhookSecret":"xyz"
                }
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":true,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"validation",
            "expression":"",
            "onCompletion":{
              "response":[

              ]
            },
            "validation":[

            ]
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":""
              }
            },
            "type":"connection"
          }
        },
        {
          "nodeId":"Step-4",
          "definition":{
            "id":"Step-4",
            "name":"Confirmation",
            "description":"Confirm template",
            "status":"nonactive",
            "jumpNodes":true,
            "entities":[

            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"template",
                "template":"Ticket_download_confirm"
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":false,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"groovy",
            "expression":"",
            "groovy":"import com.morfeus.common.cmm.CMM;\nimport com.morfeus.common.cmm.response.CMMResponse;\nimport com.morfeus.common.cmm.response.ResponseMessageWrapper;\nimport ai.active.fulfillment.webhook.data.response.Status;\nimport com.morfeus.common.message.util.MessageUtil;\nimport com.morfeus.workflow.WorkflowRequest;\nimport com.morfeus.workflow.base.Validator;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Component;\nimport ai.active.fulfillment.webhook.data.response.WorkflowValidationResponse;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n\nWorkflowValidationResponse responseMessageWrapper = new WorkflowValidationResponse();\nif(\"true\".equalsIgnoreCase(sys_confirmation) || \"false\".equalsIgnoreCase(sys_confirmation)){\n  responseMessageWrapper.setStatus(Status.SUCCESS);\n} else {\n  responseMessageWrapper.setStatus(Status.FAILED);\n}\nreturn responseMessageWrapper;",
            "javaScript":"",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            },
            "secured":false,
            "endFlow":true,
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "onCompletion":{
              "response":[

              ]
            },
            "validation":""
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":"Step-5"
              }
            },
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "type":"groovy",
            "groovy":"import groovy.json.JsonSlurper            \nif(\"true\".equalsIgnoreCase(sys_confirmation)){\nreturn new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"Status\"}');\n} else {           \nreturn new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"sys.cancellation\"}');\n}",
            "javaScript":"",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            }
          }
        },
        {
          "nodeId":"Step-3",
          "definition":{
            "id":"Step-3",
            "name":"View_Bookings",
            "description":"View user booikings",
            "status":"nonactive",
            "jumpNodes":true,
            "entities":[
              "sys.number"
            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"webhook",
                "message":"Success",
                "webHook":{
                  "webhookUrl":"https://8e1f-52-221-78-236.ngrok.io/sampleWebhookApp/view/bookings",
                  "webhookSecret":"xyz"
                }
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":false,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntitiesOrder":[
              "sys.number",
              "banking.adjectival-phrases",
              "sys.amount",
              "sys.amount-range",
              "banking.bank-name",
              "banking.biller-category",
              "banking.biller-name",
              "banking.billGroup-id",
              "banking.cheque-noOfLeafs",
              "sys.city",
              "sys.country",
              "sys.currency-code",
              "banking.customer-id",
              "sys.date",
              "sys.date-range",
              "banking.deal-number",
              "sys.distance-measurement",
              "sys.email",
              "banking.employment-type",
              "banking.expenseType",
              "sys.file-format",
              "sys.frequency",
              "sys.gender",
              "sys.holiday-list",
              "banking.interest-rate",
              "sys.itemNumber",
              "sys.locality",
              "sys.location",
              "sys.nick-name",
              "banking.otp",
              "banking.payee-category",
              "banking.payee-name",
              "sys.person-name",
              "sys.person-phone-number",
              "sys.person-relationship",
              "sys.person-salutation",
              "banking.pin",
              "insurance.policy-number",
              "sys.postal-code",
              "banking.product-account-number",
              "banking.product-account-type",
              "banking.product-card-number",
              "banking.product-card-transaction-isBilledTxn",
              "banking.product-card-type",
              "banking.product-cheque-number",
              "banking.product-list",
              "banking.product-loan-number",
              "banking.product-loan-type",
              "banking.product-name",
              "banking.product-statementMonth",
              "banking.product-type",
              "banking.property-id",
              "banking.purpose",
              "sys.quantity",
              "banking.reference-number",
              "banking.reward-points",
              "sys.tenure",
              "sys.time",
              "banking.transaction-count",
              "banking.transaction-description",
              "banking.transaction-merchant",
              "banking.transaction-spendCategory",
              "banking.transaction-type",
              "banking.unit-type",
              "sys.user-details-type",
              "banking.user-id"
            ],
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"javascript",
            "expression":"",
            "groovy":"",
            "javaScript":"if (sys_number && (sys_number === '7223' || sys_number === '7770')) {\n              var Status = {\n                SUCCESS: 'success',\n                FAILED: 'error'\n              };\n              authStatus = {\n                status:  Status.SUCCESS\n              };\n            } else {\n              var Status = {\n                SUCCESS: 'success',\n                FAILED: 'error'\n              };\n              authStatus = {\n                status:  Status.FAILED\n              };\n            }",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            },
            "secured":false,
            "endFlow":false,
            "errorPrompt":"wrong input",
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "onCompletion":{
              "response":[

              ]
            },
            "validation":""
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":"Step-4"
              }
            },
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "type":"javascript",
            "groovy":"",
            "javaScript":"var Type = {\n    NODE: 'node',\n    CUSTOM: 'custom'\n  };\n  authStatus = {\n    type:  Type.NODE,\n    id: 'Confirmation'\n  };",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            }
          }
        },
        {
          "nodeId":"Step-1",
          "definition":{
            "id":"Step-1",
            "name":"Enter Mobile number",
            "description":"Validate user",
            "status":"nonactive",
            "jumpNodes":true,
            "entities":[
              "sys.person-phone-number"
            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"javabean",
                "message":"Please enter your registered mobile number to check your bookings",
                "javaBean":"com.morfeus.banking.common.service.SamplePipeline"
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":false,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntitiesOrder":[
              "sys.person-phone-number",
              "banking.adjectival-phrases",
              "sys.amount",
              "sys.amount-range",
              "banking.bank-name",
              "banking.biller-category",
              "banking.biller-name",
              "banking.billGroup-id",
              "banking.cheque-noOfLeafs",
              "sys.city",
              "sys.country",
              "sys.currency-code",
              "banking.customer-id",
              "sys.date",
              "sys.date-range",
              "banking.deal-number",
              "sys.distance-measurement",
              "sys.email",
              "banking.employment-type",
              "banking.expenseType",
              "sys.file-format",
              "sys.frequency",
              "sys.gender",
              "sys.holiday-list",
              "banking.interest-rate",
              "sys.itemNumber",
              "sys.locality",
              "sys.location",
              "sys.nick-name",
              "sys.number",
              "banking.otp",
              "banking.payee-category",
              "banking.payee-name",
              "sys.person-name",
              "sys.person-relationship",
              "sys.person-salutation",
              "banking.pin",
              "insurance.policy-number",
              "sys.postal-code",
              "banking.product-account-number",
              "banking.product-account-type",
              "banking.product-card-number",
              "banking.product-card-transaction-isBilledTxn",
              "banking.product-card-type",
              "banking.product-cheque-number",
              "banking.product-list",
              "banking.product-loan-number",
              "banking.product-loan-type",
              "banking.product-name",
              "banking.product-statementMonth",
              "banking.product-type",
              "banking.property-id",
              "banking.purpose",
              "sys.quantity",
              "banking.reference-number",
              "banking.reward-points",
              "sys.tenure",
              "sys.time",
              "banking.transaction-count",
              "banking.transaction-description",
              "banking.transaction-merchant",
              "banking.transaction-spendCategory",
              "banking.transaction-type",
              "banking.unit-type",
              "sys.user-details-type",
              "banking.user-id"
            ],
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"javabean",
            "expression":"",
            "groovy":"",
            "javaScript":"",
            "javaBean":"com.morfeus.banking.common.service.SampleValidation",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            },
            "secured":false,
            "endFlow":false,
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "onCompletion":{
              "response":[

              ]
            },
            "validation":""
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[
              {
                "toNode":"Step-2",
                "operand":"sys.person-phone-number",
                "operator":"contains",
                "value":"98",
                "goto":"node"
              }
            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":"Step-1"
              }
            },
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "type":"connection",
            "groovy":"",
            "javaScript":"",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            }
          }
        },
        {
          "nodeId":"Step-6",
          "definition":{
            "id":"Step-6",
            "name":"error",
            "description":"Error Node",
            "status":"nonactive",
            "jumpNodes":false,
            "entities":[

            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"message",
                "message":"Something went wrong while processing your request. Pls try after sometime"
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":true,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"NONE",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"validation",
            "expression":"",
            "onCompletion":{
              "response":[

              ]
            },
            "validation":[

            ]
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":""
              }
            },
            "type":"connection"
          }
        },
        {
          "nodeId":"Step-2",
          "definition":{
            "id":"Step-2",
            "name":"Validate_Otp",
            "description":"Validate otp node",
            "status":"nonactive",
            "jumpNodes":true,
            "entities":[
              "banking.otp"
            ],
            "onMissingEntities":{

            },
            "outputs":[
              {
                "type":"message",
                "message":"Please enter the otp sent to your registered mobile number"
              }
            ],
            "customerPreferences":[

            ],
            "startNode":false,
            "stopNode":false,
            "stepCode":"",
            "workflowTransactionType":"",
            "keyboardType":"PWD",
            "partialState":{
              "partialStateSave":false,
              "partialPrimaryKeyName":"",
              "partialRoute":"",
              "fetchPendingState":false,
              "minPartialState":false
            },
            "trinityEntitiesOrder":[
              "sys.number",
              "banking.adjectival-phrases",
              "sys.amount",
              "sys.amount-range",
              "banking.bank-name",
              "banking.biller-category",
              "banking.biller-name",
              "banking.billGroup-id",
              "banking.cheque-noOfLeafs",
              "sys.city",
              "sys.country",
              "sys.currency-code",
              "banking.customer-id",
              "sys.date",
              "sys.date-range",
              "banking.deal-number",
              "sys.distance-measurement",
              "sys.email",
              "banking.employment-type",
              "banking.expenseType",
              "sys.file-format",
              "sys.frequency",
              "sys.gender",
              "sys.holiday-list",
              "banking.interest-rate",
              "sys.itemNumber",
              "sys.locality",
              "sys.location",
              "sys.nick-name",
              "banking.otp",
              "banking.payee-category",
              "banking.payee-name",
              "sys.person-name",
              "sys.person-phone-number",
              "sys.person-relationship",
              "sys.person-salutation",
              "banking.pin",
              "insurance.policy-number",
              "sys.postal-code",
              "banking.product-account-number",
              "banking.product-account-type",
              "banking.product-card-number",
              "banking.product-card-transaction-isBilledTxn",
              "banking.product-card-type",
              "banking.product-cheque-number",
              "banking.product-list",
              "banking.product-loan-number",
              "banking.product-loan-type",
              "banking.product-name",
              "banking.product-statementMonth",
              "banking.product-type",
              "banking.property-id",
              "banking.purpose",
              "sys.quantity",
              "banking.reference-number",
              "banking.reward-points",
              "sys.tenure",
              "sys.time",
              "banking.transaction-count",
              "banking.transaction-description",
              "banking.transaction-merchant",
              "banking.transaction-spendCategory",
              "banking.transaction-type",
              "banking.unit-type",
              "sys.user-details-type",
              "banking.user-id"
            ],
            "trinityEntityOrder":[

            ],
            "deletedEntities":[

            ]
          },
          "onValidate":{
            "type":"regex",
            "expression":"^[0-9]{6}$",
            "groovy":"",
            "javaScript":"",
            "javaBean":"",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            },
            "secured":false,
            "endFlow":false,
            "errorPrompt":"Invalid Otp! Please enter the correct otp",
            "updatePrompt":"",
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "onCompletion":{
              "response":[

              ]
            },
            "validatedPrompt":"Otp Validated",
            "validation":""
          },
          "onProcessing":{
            "condition":[

            ],
            "type":"condition",
            "script":"",
            "defaultOutputTypeHook":false,
            "defaultOutputTypeTemplate":false,
            "defaultOutputTypeText":false,
            "defaultOutputHook":"",
            "defaultOutputTemplate":"",
            "defaultOutputText":""
          },
          "onCompletion":{
            "response":[

            ]
          },
          "onError":{
            "response":[

            ]
          },
          "onConnection":{
            "connections":[

            ],
            "connectionConfig":{
              "default":{
                "goto":"node",
                "toNode":"Step-3"
              }
            },
            "onError":{
              "response":[
                {
                  "type":"text",
                  "messsage_code":"MSG_entity_amount",
                  "message":"enter a valid amount. Amount must be in ab.cd format only"
                },
                {
                  "type":"template",
                  "template_code":""
                }
              ]
            },
            "type":"javabean",
            "groovy":"",
            "javaScript":"",
            "javaBean":"com.morfeus.banking.common.service.SampleConnector",
            "camelRoute":"",
            "webHook":{
              "url":"",
              "secret":""
            }
          }
        }
      ],
      "connections":[
        {
          "id":"start-sys.cancellation",
          "source":"start",
          "target":"sys.cancellation",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"gray !important"
          }
        },
        {
          "id":"start-Step-1",
          "source":"start",
          "target":"Step-1",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"Step-4-Step-5",
          "source":"Step-4",
          "target":"Step-5",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"Step-3-Step-4",
          "source":"Step-3",
          "target":"Step-4",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"Step-1-Step-2",
          "source":"Step-1",
          "target":"Step-2",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"Step-1-Step-1",
          "source":"Step-1",
          "target":"Step-1",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"Step-2-Step-3",
          "source":"Step-2",
          "target":"Step-3",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        },
        {
          "id":"start-Step-6",
          "source":"start",
          "target":"Step-6",
          "onRemoveConnection":false,
          "paintStyle":{
            "stroke":"blue",
            "strokeWidth":"10"
          }
        }
      ]
    },
    "meta":{
      "serializedModel":{
        "nodes":[
          "{\"start\":{\"label\":\"Start\",\"style\":{\"left\":10,\"top\":10},\"allowLoopback\":false}}",
          "{\"sys.cancellation\":{\"label\":\"sys.cancellation\",\"style\":{\"left\":\"400px\",\"top\":10,\"stroke\":1,\"strokeDasharray\":\"5,5\"},\"allowLoopback\":false}}",
          "{\"Step-1\":{\"label\":\"Step-1\",\"style\":{\"left\":197,\"top\":208},\"allowLoopback\":false}}",
          "{\"Step-2\":{\"label\":\"Step-2\",\"style\":{\"left\":506,\"top\":208},\"allowLoopback\":false}}",
          "{\"Step-3\":{\"label\":\"Step-3\",\"style\":{\"left\":817,\"top\":208},\"allowLoopback\":false}}",
          "{\"Step-4\":{\"label\":\"Step-4\",\"style\":{\"left\":646,\"top\":409},\"allowLoopback\":false}}",
          "{\"Step-5\":{\"label\":\"Step-5\",\"style\":{\"left\":196,\"top\":430},\"allowLoopback\":false}}",
          "{\"Step-6\":{\"label\":\"Step-6\",\"style\":{\"left\":408,\"top\":123},\"allowLoopback\":false}}"
        ],
        "connections":[
          {
            "id":"start-sys.cancellation",
            "source":"start",
            "target":"sys.cancellation",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"gray !important"
            }
          },
          {
            "id":"start-Step-1",
            "source":"start",
            "target":"Step-1",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"Step-4-Step-5",
            "source":"Step-4",
            "target":"Step-5",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"Step-3-Step-4",
            "source":"Step-3",
            "target":"Step-4",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"Step-1-Step-2",
            "source":"Step-1",
            "target":"Step-2",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"Step-1-Step-1",
            "source":"Step-1",
            "target":"Step-1",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"Step-2-Step-3",
            "source":"Step-2",
            "target":"Step-3",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          },
          {
            "id":"start-Step-6",
            "source":"start",
            "target":"Step-6",
            "onRemoveConnection":false,
            "paintStyle":{
              "stroke":"blue",
              "strokeWidth":"10"
            }
          }
        ]
      }
    },
    "parsed_flow":{
      "entities":[
        "banking.adjectival-phrases",
        "sys.amount",
        "sys.amount-range",
        "banking.bank-name",
        "banking.biller-category",
        "banking.biller-name",
        "banking.billGroup-id",
        "banking.cheque-noOfLeafs",
        "sys.city",
        "sys.country",
        "sys.currency-code",
        "banking.customer-id",
        "sys.date",
        "sys.date-range",
        "banking.deal-number",
        "sys.distance-measurement",
        "sys.email",
        "banking.employment-type",
        "banking.expenseType",
        "sys.file-format",
        "sys.frequency",
        "sys.gender",
        "sys.holiday-list",
        "banking.interest-rate",
        "sys.itemNumber",
        "sys.locality",
        "sys.location",
        "sys.nick-name",
        "sys.number",
        "banking.otp",
        "banking.payee-category",
        "banking.payee-name",
        "sys.person-name",
        "sys.person-phone-number",
        "sys.person-relationship",
        "sys.person-salutation",
        "banking.pin",
        "insurance.policy-number",
        "sys.postal-code",
        "banking.product-account-number",
        "banking.product-account-type",
        "banking.product-card-number",
        "banking.product-card-transaction-isBilledTxn",
        "banking.product-card-type",
        "banking.product-cheque-number",
        "banking.product-list",
        "banking.product-loan-number",
        "banking.product-loan-type",
        "banking.product-name",
        "banking.product-statementMonth",
        "banking.product-type",
        "banking.property-id",
        "banking.purpose",
        "sys.quantity",
        "banking.reference-number",
        "banking.reward-points",
        "sys.confirmation",
        "sys.tenure",
        "sys.time",
        "banking.transaction-count",
        "banking.transaction-description",
        "banking.transaction-merchant",
        "banking.transaction-spendCategory",
        "banking.transaction-type",
        "banking.unit-type",
        "sys.user-details-type",
        "banking.user-id"
      ],
      "node":[
        {
          "init":true,
          "end":false,
          "node_id":"Start",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"Start",
          "description":"Beginning of workflow",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[

            ],
            "entity_id":"*",
            "scripts":[
              {
                "script_input":[

                ],
                "script":"import groovy.json.JsonSlurper \n              return new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"Enter Mobile number\"}'); \n              ",
                "scriptType":"groovy"
              }
            ],
            "validation":{
              "type":"regex",
              "allowed_values":[

              ],
              "goto":[

              ],
              "secured":false,
              "tfaSecured":false
            }
          },
          "pipelines":[

          ],
          "outputs":[

          ],
          "partialStateSave":false,
          "enableJumpNode":true,
          "expectedEntities":[

          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"banking.adjectival-phrases,sys.amount,sys.amount-range,banking.bank-name,banking.biller-category,banking.biller-name,banking.billGroup-id,banking.cheque-noOfLeafs,sys.city,sys.country,sys.currency-code,banking.customer-id,sys.date,sys.date-range,banking.deal-number,sys.distance-measurement,sys.email,banking.employment-type,banking.expenseType,sys.file-format,sys.frequency,sys.gender,sys.holiday-list,banking.interest-rate,sys.itemNumber,sys.locality,sys.location,sys.nick-name,sys.number,banking.otp,banking.payee-category,banking.payee-name,sys.person-name,sys.person-phone-number,sys.person-relationship,sys.person-salutation,banking.pin,insurance.policy-number,sys.postal-code,banking.product-account-number,banking.product-account-type,banking.product-card-number,banking.product-card-transaction-isBilledTxn,banking.product-card-type,banking.product-cheque-number,banking.product-list,banking.product-loan-number,banking.product-loan-type,banking.product-name,banking.product-statementMonth,banking.product-type,banking.property-id,banking.purpose,sys.quantity,banking.reference-number,banking.reward-points,sys.confirmation,sys.tenure,sys.time,banking.transaction-count,banking.transaction-description,banking.transaction-merchant,banking.transaction-spendCategory,banking.transaction-type,banking.unit-type,sys.user-details-type,banking.user-id",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":true,
          "node_id":"sys.cancellation",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"sys.cancellation",
          "description":"Cancel or exit from current flow",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[
              {
                "sys_cancellation":"sys_cancellation"
              }
            ],
            "entity_id":"sys.cancellation",
            "scripts":[

            ],
            "validation":{
              "type":"regex",
              "allowed_values":[

              ],
              "goto":[

              ],
              "secured":false,
              "tfaSecured":false
            }
          },
          "pipelines":[

          ],
          "outputs":[
            {
              "id":"",
              "type":"text",
              "text":"The request has been cancelled, how else can I help you?",
              "mode":"dynamic"
            }
          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[
            "sys.cancellation"
          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"sys.cancellation,banking.adjectival-phrases,sys.amount,sys.amount-range,banking.bank-name,banking.biller-category,banking.biller-name,banking.billGroup-id,banking.cheque-noOfLeafs,sys.city,sys.country,sys.currency-code,banking.customer-id,sys.date,sys.date-range,banking.deal-number,sys.distance-measurement,sys.email,banking.employment-type,banking.expenseType,sys.file-format,sys.frequency,sys.gender,sys.holiday-list,banking.interest-rate,sys.itemNumber,sys.locality,sys.location,sys.nick-name,sys.number,banking.otp,banking.payee-category,banking.payee-name,sys.person-name,sys.person-phone-number,sys.person-relationship,sys.person-salutation,banking.pin,insurance.policy-number,sys.postal-code,banking.product-account-number,banking.product-account-type,banking.product-card-number,banking.product-card-transaction-isBilledTxn,banking.product-card-type,banking.product-cheque-number,banking.product-list,banking.product-loan-number,banking.product-loan-type,banking.product-name,banking.product-statementMonth,banking.product-type,banking.property-id,banking.purpose,sys.quantity,banking.reference-number,banking.reward-points,sys.confirmation,sys.tenure,sys.time,banking.transaction-count,banking.transaction-description,banking.transaction-merchant,banking.transaction-spendCategory,banking.transaction-type,banking.unit-type,sys.user-details-type,banking.user-id",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":true,
          "node_id":"Status",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"Status",
          "description":"Show download status",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[

            ],
            "entity_id":"*",
            "scripts":[

            ],
            "validation":{
              "type":"regex",
              "allowed_values":[

              ],
              "goto":[

              ],
              "secured":false,
              "tfaSecured":false
            }
          },
          "pipelines":[
            {
              "id":"",
              "type":"webhook",
              "webhookUrl":"https://8e1f-52-221-78-236.ngrok.io/sampleWebhookApp/download/status",
              "webhookSecret":"xyz"
            }
          ],
          "outputs":[

          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[

          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"banking.adjectival-phrases,sys.amount,sys.amount-range,banking.bank-name,banking.biller-category,banking.biller-name,banking.billGroup-id,banking.cheque-noOfLeafs,sys.city,sys.country,sys.currency-code,banking.customer-id,sys.date,sys.date-range,banking.deal-number,sys.distance-measurement,sys.email,banking.employment-type,banking.expenseType,sys.file-format,sys.frequency,sys.gender,sys.holiday-list,banking.interest-rate,sys.itemNumber,sys.locality,sys.location,sys.nick-name,sys.number,banking.otp,banking.payee-category,banking.payee-name,sys.person-name,sys.person-phone-number,sys.person-relationship,sys.person-salutation,banking.pin,insurance.policy-number,sys.postal-code,banking.product-account-number,banking.product-account-type,banking.product-card-number,banking.product-card-transaction-isBilledTxn,banking.product-card-type,banking.product-cheque-number,banking.product-list,banking.product-loan-number,banking.product-loan-type,banking.product-name,banking.product-statementMonth,banking.product-type,banking.property-id,banking.purpose,sys.quantity,banking.reference-number,banking.reward-points,sys.confirmation,sys.tenure,sys.time,banking.transaction-count,banking.transaction-description,banking.transaction-merchant,banking.transaction-spendCategory,banking.transaction-type,banking.unit-type,sys.user-details-type,banking.user-id",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":false,
          "node_id":"Confirmation",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"Confirmation",
          "description":"Confirm template",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[

            ],
            "entity_id":"*",
            "scripts":[
              {
                "script_input":[

                ],
                "script":"import groovy.json.JsonSlurper            \nif(\"true\".equalsIgnoreCase(sys_confirmation)){\nreturn new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"Status\"}');\n} else {           \nreturn new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"sys.cancellation\"}');\n}",
                "scriptType":"groovy"
              }
            ],
            "validation":{
              "type":"groovy",
              "secured":false,
              "tfaSecured":false,
              "goto":[
                {
                  "type":"endFlow"
                }
              ],
              "script":"import com.morfeus.common.cmm.CMM;\nimport com.morfeus.common.cmm.response.CMMResponse;\nimport com.morfeus.common.cmm.response.ResponseMessageWrapper;\nimport ai.active.fulfillment.webhook.data.response.Status;\nimport com.morfeus.common.message.util.MessageUtil;\nimport com.morfeus.workflow.WorkflowRequest;\nimport com.morfeus.workflow.base.Validator;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Component;\nimport ai.active.fulfillment.webhook.data.response.WorkflowValidationResponse;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n\nWorkflowValidationResponse responseMessageWrapper = new WorkflowValidationResponse();\nif(\"true\".equalsIgnoreCase(sys_confirmation) || \"false\".equalsIgnoreCase(sys_confirmation)){\n  responseMessageWrapper.setStatus(Status.SUCCESS);\n} else {\n  responseMessageWrapper.setStatus(Status.FAILED);\n}\nreturn responseMessageWrapper;"
            }
          },
          "pipelines":[

          ],
          "outputs":[
            {
              "id":"",
              "type":"template",
              "template_id":"Ticket_download_confirm",
              "mode":"dynamic"
            }
          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[

          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"banking.adjectival-phrases,sys.amount,sys.amount-range,banking.bank-name,banking.biller-category,banking.biller-name,banking.billGroup-id,banking.cheque-noOfLeafs,sys.city,sys.country,sys.currency-code,banking.customer-id,sys.date,sys.date-range,banking.deal-number,sys.distance-measurement,sys.email,banking.employment-type,banking.expenseType,sys.file-format,sys.frequency,sys.gender,sys.holiday-list,banking.interest-rate,sys.itemNumber,sys.locality,sys.location,sys.nick-name,sys.number,banking.otp,banking.payee-category,banking.payee-name,sys.person-name,sys.person-phone-number,sys.person-relationship,sys.person-salutation,banking.pin,insurance.policy-number,sys.postal-code,banking.product-account-number,banking.product-account-type,banking.product-card-number,banking.product-card-transaction-isBilledTxn,banking.product-card-type,banking.product-cheque-number,banking.product-list,banking.product-loan-number,banking.product-loan-type,banking.product-name,banking.product-statementMonth,banking.product-type,banking.property-id,banking.purpose,sys.quantity,banking.reference-number,banking.reward-points,sys.confirmation,sys.tenure,sys.time,banking.transaction-count,banking.transaction-description,banking.transaction-merchant,banking.transaction-spendCategory,banking.transaction-type,banking.unit-type,sys.user-details-type,banking.user-id",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":false,
          "node_id":"View_Bookings",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"View_Bookings",
          "description":"View user booikings",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[
              {
                "sys_number":"sys_number_View_Bookings"
              }
            ],
            "entity_id":"sys.number",
            "scripts":[
              {
                "script_input":[

                ],
                "script":"var Type = {\n    NODE: 'node',\n    CUSTOM: 'custom'\n  };\n  authStatus = {\n    type:  Type.NODE,\n    id: 'Confirmation'\n  };",
                "scriptType":"javascript"
              }
            ],
            "validation":{
              "type":"javascript",
              "secured":false,
              "tfaSecured":false,
              "goto":[
                {
                  "type":"output"
                }
              ],
              "script":"if (sys_number && (sys_number === '7223' || sys_number === '7770')) {\n              var Status = {\n                SUCCESS: 'success',\n                FAILED: 'error'\n              };\n              authStatus = {\n                status:  Status.SUCCESS\n              };\n            } else {\n              var Status = {\n                SUCCESS: 'success',\n                FAILED: 'error'\n              };\n              authStatus = {\n                status:  Status.FAILED\n              };\n            }"
            }
          },
          "pipelines":[
            {
              "id":"",
              "type":"webhook",
              "webhookUrl":"https://8e1f-52-221-78-236.ngrok.io/sampleWebhookApp/view/bookings",
              "webhookSecret":"xyz"
            }
          ],
          "outputs":[
            {
              "id":"error",
              "type":"text",
              "text":"wrong input",
              "mode":"dynamic"
            }
          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[
            "sys.number"
          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"sys.number",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":false,
          "node_id":"Enter Mobile number",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"Enter Mobile number",
          "description":"Validate user",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[
              {
                "sys_person_phone_number":"sys_person_phone_number_Enter_Mobile_number"
              }
            ],
            "entity_id":"sys.person-phone-number",
            "scripts":[
              {
                "script_input":[
                  {
                    "valueType":"entity_id",
                    "valueId":"sys.person-phone-number"
                  }
                ],
                "script":"import groovy.json.JsonSlurper\n            if(entityValue.contains(\"98\") || sys_person_phone_number.contains(\"98\")){ \n              return new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"Validate_Otp\"}');\n            } else { \n          return new JsonSlurper().parseText('{\"type\":\"node\",\"id\":\"Enter Mobile number\"}');\n        }\n      ",
                "scriptType":"groovy"
              }
            ],
            "validation":{
              "type":"java",
              "secured":false,
              "tfaSecured":false,
              "className":"com.morfeus.banking.common.service.SampleValidation",
              "goto":[

              ]
            }
          },
          "pipelines":[
            {
              "id":"Enter Mobile number",
              "metadata":"",
              "goto":{
                "id":"Validate_Otp",
                "type":"node"
              }
            },
            {
              "id":"",
              "type":"java",
              "metadata":"",
              "goto":{
                "id":"com.morfeus.banking.common.service.SamplePipeline",
                "type":"java"
              }
            }
          ],
          "outputs":[

          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[
            "sys.person-phone-number"
          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"sys.person-phone-number",
          "keyboard_type":"NONE"
        },
        {
          "init":false,
          "end":false,
          "node_id":"Validate_Otp",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"Validate_Otp",
          "description":"Validate otp node",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[
              {
                "banking_otp":"banking_otp_Validate_Otp"
              }
            ],
            "entity_id":"banking.otp",
            "scripts":[
              {
                "script_input":[

                ],
                "script":"com.morfeus.banking.common.service.SampleConnector",
                "scriptType":"java"
              }
            ],
            "validation":{
              "type":"regex",
              "expression":"^[0-9]{6}$",
              "allowed_values":[

              ],
              "goto":[
                {
                  "type":"output"
                }
              ],
              "secured":false,
              "tfaSecured":false
            }
          },
          "pipelines":[

          ],
          "outputs":[
            {
              "id":"error",
              "type":"text",
              "text":"Invalid Otp! Please enter the correct otp",
              "mode":"dynamic"
            },
            {
              "id":"validated",
              "type":"text",
              "text":"Otp Validated",
              "mode":"dynamic"
            },
            {
              "id":"",
              "type":"text",
              "text":"Please enter the otp sent to your registered mobile number",
              "mode":"dynamic"
            }
          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[
            "banking.otp"
          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"banking.otp",
          "keyboard_type":"PWD"
        },
        {
          "init":false,
          "end":true,
          "node_id":"error",
          "parent_node_id":"",
          "previous_node_id":"",
          "step_code":"",
          "workflow_transaction_type":"",
          "name":"error",
          "description":"Error Node",
          "last_modified":"",
          "input_definition":{
            "id":"",
            "customer_preference_id":[

            ],
            "entity_id":"*",
            "scripts":[

            ],
            "validation":{
              "type":"regex",
              "allowed_values":[

              ],
              "goto":[

              ],
              "secured":false,
              "tfaSecured":false
            }
          },
          "pipelines":[

          ],
          "outputs":[
            {
              "id":"",
              "type":"text",
              "text":"Something went wrong while processing your request. Pls try after sometime",
              "mode":"dynamic"
            }
          ],
          "fetchPendingWorkflow":false,
          "expectedEntities":[

          ],
          "eeSelectionRules":[
            {
              "alternative":[

              ]
            }
          ],
          "trinityEntitiesOrder":"banking.adjectival-phrases,sys.amount,sys.amount-range,banking.bank-name,banking.biller-category,banking.biller-name,banking.billGroup-id,banking.cheque-noOfLeafs,sys.city,sys.country,sys.currency-code,banking.customer-id,sys.date,sys.date-range,banking.deal-number,sys.distance-measurement,sys.email,banking.employment-type,banking.expenseType,sys.file-format,sys.frequency,sys.gender,sys.holiday-list,banking.interest-rate,sys.itemNumber,sys.locality,sys.location,sys.nick-name,sys.number,banking.otp,banking.payee-category,banking.payee-name,sys.person-name,sys.person-phone-number,sys.person-relationship,sys.person-salutation,banking.pin,insurance.policy-number,sys.postal-code,banking.product-account-number,banking.product-account-type,banking.product-card-number,banking.product-card-transaction-isBilledTxn,banking.product-card-type,banking.product-cheque-number,banking.product-list,banking.product-loan-number,banking.product-loan-type,banking.product-name,banking.product-statementMonth,banking.product-type,banking.property-id,banking.purpose,sys.quantity,banking.reference-number,banking.reward-points,sys.confirmation,sys.tenure,sys.time,banking.transaction-count,banking.transaction-description,banking.transaction-merchant,banking.transaction-spendCategory,banking.transaction-type,banking.unit-type,sys.user-details-type,banking.user-id",
          "keyboard_type":"NONE"
        }
      ]
    },
    "on_completion":{

    },
    "onError":{
      "response":[

      ]
    },
    "variables":[

    ]
  }
}
